@*/admin/RegAdmin/PaymentManagement*@

@model IEnumerable<RemliCMS.RegSystem.Entities.Ledger>

<div class="row">
    <div class="large-12 columns">
        <h3>Ledger Entries List</h3>
    </div>
</div>

<div class="row">
    <div id="ledgers" class="large-12 columns">
        <table>
            <thead>
                <tr>
                    <th class="sort" data-sort="id">
                        @Html.DisplayNameFor(model => model.RegId)
                    </th>
                    <th class="sort" data-sort="date">
                        @Html.DisplayNameFor(model => model.LedgerDate)
                    </th>
                    <th class="sort" data-sort="type">
                        @Html.DisplayNameFor(model => model.LedgerTypeId)
                    </th>
                    <th class="sort" data-sort="note">
                        @Html.DisplayNameFor(model => model.LedgerNote)
                    </th>
                    <th class="sort" data-sort="amount">
                        @Html.DisplayNameFor(model => model.LedgerAmount)
                    </th>
                    <th class="sort" data-sort="confirmed">
                        @Html.DisplayNameFor(model => model.IsConfirmed)
                    </th>
                    <th>
                        <input type="text" class="search" placeholder="Search Payment"/>
                    </th>
                </tr>
            </thead>
            <tbody class="list">
                @foreach (var item in Model)
                {
                    <tr>                    
                        <td class="id">
                            <a href="@Url.Action("OpenReg", "RegAdmin", new { regId = item.RegId })">@item.RegId</a>
                        </td>
                        <td class="date">
                            @Html.DisplayFor(modelItem => item.LedgerDate)                        
                        </td>
                        <td class="type">
                            @{ Html.RenderAction("RegValueText","Register", new {translationObjectId = ViewBag.translationObjectId, regValueKey = "ledger", regValue = item.LedgerTypeId}); }
                        </td>                    
                        <td class="note">
                            @Html.DisplayFor(modelItem => item.LedgerNote)
                            <a href="@Url.Action("PaymentMemo", "RegAdmin", new {ledgerId = item.Id})"><i class="fi-pencil"></i></a>
                        
                        </td>                    
                        <td class="amount">
                            @Html.DisplayFor(modelItem => item.LedgerAmount)
                        </td>                    
                        <td class="confirmed">
                            @if (item.IsCancelled)
                            {
                                <div class="red">Cancelled</div>
                            }
                            else
                            {
                                if (item.IsConfirmed)
                                {
                                    <div class="green">Confirmed</div>
                                }
                                else
                                {
                                    @Html.ActionLink("Confirm","PaymentConfirm",new {ledgerId = item.Id})
                                }                                                    
                            }
                        </td>           
                        <td>
                            @if (item.IsCancelled)
                            {
                            }
                            else
                            {
                                if (item.IsConfirmed)
                                {
                                    @Html.ActionLink("UnConfirm","PaymentUnconfirm",new {ledgerId = item.Id})
                                }
                                else
                                {
                                    @Html.ActionLink("Cancel","PaymentCancel",new {ledgerId = item.Id})
                                }                                                    
                            }
                        </td>
         
                    </tr>
                
                }
            </tbody>

        </table>
    </div>
</div>


@section head
{
    @{ Html.RenderAction("AdminHeader","Shared", new {currentItem = "payment"});}
}

@section Scripts
{

    <script src="~/Scripts/list.min.js"></script>

    <script>
        var options = {
            valueNames: ['id', 'date', 'type', 'note', 'amount', 'confirmed']
        };

        var registrationList = new List('ledgers', options);
        
    </script>
}