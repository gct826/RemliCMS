@*/translation/Register/Participant*@

@model RemliCMS.RegSystem.Entities.Participant

@{Html.RenderAction("Summary", "Register", new { regId = ViewBag.RegId});}

<div class="row">
    <div class="large-12 columns">
      @using (Html.BeginForm())
      {
        @Html.AntiForgeryToken()

        <div class="row">
            
            <input data-val="true" data-val-required="The Id field is required." id="RegId" name="RegId" type="hidden" value="@ViewBag.RegId" />
            <input data-val="true" data-val-required="The Id field is required." id="PartId" name="PartId" type="hidden" value="@ViewBag.ParticipantId" />
            <input data-val="true" data-val-required="The Id field is required." id="StatusId" name="StatusId" type="hidden" value="1" />
            <input data-val="true" data-val-required="The Id field is required." id="PartPrice" name="PartPrice" type="hidden" value="0" />
            
            <div class="large-4 medium-6 small-12 columns">
                <label>
                    @Html.LabelFor(model => model.FirstName)
                    @Html.ValidationMessageFor(model => model.FirstName)
                    @Html.EditorFor(model => model.FirstName)
                </label>
            </div>
            <div class="large-4 medium-6 small-12 columns">
                <label>
                    @Html.LabelFor(model => model.LastName)
                    @Html.ValidationMessageFor(model => model.LastName)
                    @Html.EditorFor(model => model.LastName)
                </label>
            </div>
            <div class="large-4 medium-6 small-12 columns">
                <label>
                    @Html.LabelFor(model => model.ChineseName)
                    @Html.ValidationMessageFor(model => model.ChineseName)
                    @Html.EditorFor(model => model.ChineseName)
                </label>
            </div>
            <div class="large-4 medium-6 small-12 columns">
                <label>
                    @Html.LabelFor(model => model.GenderId)
                    @Html.ValidationMessageFor(model => model.GenderId)
                </label>
                @foreach (SelectListItem item in @ViewBag.GenderId)
                {
                    <label>
                        @Html.RadioButtonFor(model => model.GenderId, item.Value)
                        &nbsp; @Html.Raw(@HttpUtility.HtmlEncode(item.Text))
                    </label>
                }
            </div> 
            <div class="large-4 medium-6 small-12 columns">
                <label>
                    @Html.LabelFor(model => model.AgeRangeId)
                    @Html.ValidationMessageFor(model => model.AgeRangeId)    
                </label>
                @foreach (SelectListItem item in @ViewBag.AgeRangeId)
                {
                    <label>
                        @Html.RadioButtonFor(model => model.AgeRangeId, item.Value)
                        &nbsp; @Html.Raw(@HttpUtility.HtmlEncode(item.Text))
                    </label>
                }
            </div> 
            <div class="large-4 medium-6 small-12 columns">
                <label>
                    @Html.LabelFor(model => model.SessionId)
                    @Html.ValidationMessageFor(model => model.SessionId)       
                </label>                                  
                @foreach (SelectListItem item in @ViewBag.SessionId)
                {
                    <label>
                        @Html.RadioButtonFor(model => model.SessionId, item.Value)
                        &nbsp; @Html.Raw(@HttpUtility.HtmlEncode(item.Text))
                    </label>
                }
            </div> 
            <div class="large-4 medium-6 small-12 columns">
                <label>
                    @Html.LabelFor(model => model.RoomTypeId)
                    @Html.ValidationMessageFor(model => model.RoomTypeId)
                </label>
                @foreach (SelectListItem item in @ViewBag.RoomTypeId)
                {
                    <label>
                        @Html.RadioButtonFor(model => model.RoomTypeId, item.Value)
                        &nbsp; @Html.Raw(@HttpUtility.HtmlEncode(item.Text))
                    </label>
                }
            </div>
            <div class="large-4 medium-6 small-12 columns">
                <label>
                    @Html.LabelFor(model => model.RoomNote)
                    @Html.ValidationMessageFor(model => model.RoomNote)
                    @Html.EditorFor(model => model.RoomNote)
                </label>
            </div> 
            <div class="large-4 medium-6 small-12 columns">
                        
                <input class="button wide tiny" type="submit" title="Save" value="Save" name="submit"/>   
                @Html.ActionLink("Back", "Registration", "Register", new { regObjectId = ViewBag.RegObjectID }, new { @class = "button tiny wide alert" })

            </div>
        </div>      
      }

        
        
    </div>
</div>

@section head
{
    @if (ViewBag.isAdmin == false)
    {
        Html.RenderAction("NavBar", "Shared");
    }
    else
    {
        Html.RenderAction("AdminHeader", "Shared", new { currentItem = "registration" });
    }
}

@section Scripts {

<script>
    function setupLabel() {
        if ($('.label_check input').length) {
            $('.label_check').each(function(){ 
                $(this).removeClass('c_on');
            });
            $('.label_check input:checked').each(function(){ 
                $(this).parent('label').addClass('c_on');
            });                
        };
        if ($('.label_radio input').length) {
            $('.label_radio').each(function(){ 
                $(this).removeClass('r_on');
            });
            $('.label_radio input:checked').each(function(){ 
                $(this).parent('label').addClass('r_on');
            });
        };
    };
    $(document).ready(function(){
        $('body').addClass('has-js');
        $('.label_check, .label_radio').click(function(){
            setupLabel();
        });
        setupLabel(); 
    });
</script>
 }